package resolver

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.38

import (
	"context"
	"fmt"
	"strconv"

	"github.com/tf63/code-api/api"
)

// Todos is the resolver for the todos field.
func (r *queryResolver) Todos(ctx context.Context) ([]*api.Todo, error) {

	todosEntity, err := r.Tr.ReadTodos()
	if err != nil {
		err = TodoErrorHandler("Read", err)
		return nil, err
	}

	todos := []*api.Todo{}
	for _, todoEntity := range todosEntity {
		todo := TodoDTO(todoEntity)
		todos = append(todos, &todo)
	}

	return todos, nil
}

// Todo is the resolver for the todo field.
func (r *queryResolver) Todo(ctx context.Context, input string) (*api.Todo, error) {
	todoId, err := strconv.Atoi(input)
	if err != nil {
		err = TodoErrorHandler("Read", err)
		return nil, err
	}

	todoEntity, err := r.Tr.ReadTodo(todoId)
	if err != nil {
		err = TodoErrorHandler("Read", err)
		return nil, err
	}

	todo := TodoDTO(*todoEntity)

	return &todo, nil
}

// GetProgramCodeList is the resolver for the getProgramCodeList field.
func (r *queryResolver) GetProgramCodeList(ctx context.Context, after *string, before *string, first *int, last *int) (*api.ProgramCodeConnection, error) {
	panic(fmt.Errorf("not implemented: GetProgramCodeList - getProgramCodeList"))
}

// Query returns api.QueryResolver implementation.
func (r *Resolver) Query() api.QueryResolver { return &queryResolver{r} }

type queryResolver struct{ *Resolver }
